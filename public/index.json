
[{"content":"","date":"March 15 2025","externalUrl":null,"permalink":"/tags/cilium/","section":"Tags","summary":"","title":"Cilium","type":"tags"},{"content":"","date":"March 15 2025","externalUrl":null,"permalink":"/","section":"Home","summary":"","title":"Home","type":"page"},{"content":"","date":"March 15 2025","externalUrl":null,"permalink":"/tags/ipv6/","section":"Tags","summary":"","title":"IPv6","type":"tags"},{"content":"If you use MacOS as your daily driver and need a functional IPv6 enabled Kubernetes cluster for local development/testing this article is meant for you! I have been using orbstack for a few years now as a drop in replacement for Docker desktop and I have to say it\u0026rsquo;s beyond impressive in terms of performance and features. My main motivation to move away from Docker desktop was the lack of support IPv6 on a MacOS and the horrendous performance. The next thing I tried was Colima which is quite flexible but still lacks IPv6 support on MacOS.\nWhile there are multiple kubernetes distributions such as minikube, k3d which work quite well on a MacOS, neither of those support IPv6 üò≠ Eventually I ended up trying KIND and turns out, it works perfectly fine with IPv6 and is fully customizable üéâ\nIf you look under the hood, Kubernetes is an API server which relies on composable set of components to build a distributed system. Kubernetes by itself does not handle networking just as it does not handle managing container lifecycle, it relies on a container runtime such as containerd. Similarly, k8s relies on a container network interface [CNI] (https://cni.dev) which is the component that manages cluster networking and routing network traffic in and out of the cluster. I will write more about CNI\u0026rsquo;s in a separate blog post ;) But to make a Kubernetes cluster IPv6 capable, we need to install a CNI which supports IPv6. Cilium is my CNI of choice as it support IPv6, has a large community around it and is a CNCF graduate project which speaks for it\u0026rsquo;s maturity.\nTo get a functional IPv6 capable kubernetes cluster on a MacOS we need the following\nOrbstack KIND Cilium Make sure to have the following installed on your MacOS. If not, you can install them using homebrew.\nhelm kubectl cilium-cli Orbstack # After installing orbstack make sure your docker context is pointing to Orbstack. You may have to explicitly switch the docker context to orbstack if you have Docker desktop installed. In my case, I uninstalled Docker desktop.\n~ ‚ùØ docker context ls NAME DESCRIPTION DOCKER ENDPOINT ERROR default Current DOCKER_HOST based configuration unix:///var/run/docker.sock desktop-linux unix:///Users/kagraw/.docker/run/docker.sock orbstack * OrbStack unix:///Users/kagraw/.orbstack/run/docker.sock Enable IPv6 in Docker daemon with the following config.\n‚ùØ cat .orbstack/config/docker.json { \u0026#34;ip6tables\u0026#34; : false, \u0026#34;ipv6\u0026#34; : true } Create a KIND cluster # Create a file named kind-config.yaml to pre-configure KIND with the following config options. Notice that I am disabling the default CNI (flannel) so I can install Cilium üòã\nkind-config.yaml # --- kind: Cluster apiVersion: kind.x-k8s.io/v1alpha4 name: kind runtimeConfig: \u0026#34;api/alpha\u0026#34;: \u0026#34;false\u0026#34; networking: apiServerPort: 6443 ipFamily: dual disableDefaultCNI: true # IPv6 prefix must be specified first serviceSubnet: fd00:10:96::/112,10.96.0.0/16 nodes: - role: control-plane - role: worker - role: worker Bootstrap the cluster.\n# Creates a new cluster with our custom config ‚ùØ kind create cluster --config kind-config.yaml Creating cluster \u0026#34;kind\u0026#34; ... ‚úì Ensuring node image (kindest/node:v1.32.2) üñº ‚úì Preparing nodes üì¶ üì¶ üì¶ ‚úì Writing configuration üìú ‚úì Starting control-plane üïπÔ∏è ‚úì Installing StorageClass üíæ ‚úì Joining worker nodes üöú Set kubectl context to \u0026#34;kind-kind\u0026#34; You can now use your cluster with: kubectl cluster-info --context kind-kind Thanks for using kind! üòä Next we install Cilium CNI with IPv6 enabled\n‚ùØ helm install cilium cilium/cilium --namespace=kube-system --set ipv6.enabled=true Optionally, we can enable Hubble as well!\n‚ùØ helm upgrade -n kube-system \\ cilium cilium/cilium \\ --reuse-values --version 1.17.1 \\ --set hubble.relay.enabled=true \\ --set hubble.ui.enabled=true The installation takes about 2-3 mins. We can monitor progress using the following\n‚ùØ cilium status --wait ‚ùØ kubectl get nodes -o wide | awk \u0026#39;{print $1, $2, $3, $5, $6}\u0026#39; | column -t NAME STATUS ROLES VERSION INTERNAL-IP kind-control-plane Ready control-plane v1.32.2 fc00:f853:ccd:e793::2 kind-worker Ready worker v1.32.2 fc00:f853:ccd:e793::3 kind-worker2 Ready worker v1.32.2 fc00:f853:ccd:e793::4 Now let\u0026rsquo;s try deploying a simple application and verify connectivity over IPv6.\nDeploy and Verify # ‚ùØ kubectl create deployment --image nginx nginx --port 80 deployment.apps/nginx created ‚ùØ kubectl expose deployment nginx --type NodePort service/nginx exposed ‚ùØ kubectl get svc NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE nginx NodePort fd00:10:96::dbc9 \u0026lt;none\u0026gt; 80:30368/TCP 12s External IP shows as none but that is expected since we created a service of type NodePort which is exposed over port 30368. To access a NodePort service we can send a http GET request to any of the cluster nodes over this port.\n‚ùØ curl -6 http://\\[fc00:f853:ccd:e793::3\\]:30368 \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;Welcome to nginx!\u0026lt;/title\u0026gt; \u0026lt;style\u0026gt; html { color-scheme: light dark; } body { width: 35em; margin: 0 auto; font-family: Tahoma, Verdana, Arial, sans-serif; } \u0026lt;/style\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;Welcome to nginx!\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt;If you see this page, the nginx web server is successfully installed and working. Further configuration is required.\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;For online documentation and support please refer to \u0026lt;a href=\u0026#34;http://nginx.org/\u0026#34;\u0026gt;nginx.org\u0026lt;/a\u0026gt;.\u0026lt;br/\u0026gt; Commercial support is available at \u0026lt;a href=\u0026#34;http://nginx.com/\u0026#34;\u0026gt;nginx.com\u0026lt;/a\u0026gt;.\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;\u0026lt;em\u0026gt;Thank you for using nginx.\u0026lt;/em\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Voila!üçæ our application is running on Kubernetes and is accessible over IPv6!\nConclusion # Running an IPv6 capable Kubernetes cluster is absolutely possible on a MacOS and developers can leverage this setup to develop and test their applications in a IPv6 native environment.\n","date":"March 15 2025","externalUrl":null,"permalink":"/posts/kind-macos/","section":"Posts","summary":"","title":"IPv6 enabled Kubernetes cluster on MacOS","type":"posts"},{"content":"","date":"March 15 2025","externalUrl":null,"permalink":"/tags/kubernetes/","section":"Tags","summary":"","title":"Kubernetes","type":"tags"},{"content":"","date":"March 15 2025","externalUrl":null,"permalink":"/posts/","section":"Posts","summary":"","title":"Posts","type":"posts"},{"content":"","date":"March 15 2025","externalUrl":null,"permalink":"/tags/","section":"Tags","summary":"","title":"Tags","type":"tags"},{"content":" RouterOS config # # Configure interface group /interface list add comment=\u0026#34;UPLINK to ISP\u0026#34; name=WAN /interface list member add comment=\u0026#34;WAN facing interface\u0026#34; interface=ether1 list=WAN # Enable router-advertisement incoming from the ISP /ipv6 settings set accept-router-advertisements=yes # Request an IPv6 prefix over WAN interface; my ISP hands out a /56 /ipv6 dhcp-client add add-default-route=yes interface=ether1 pool-name=delegation pool-prefix-length=56 prefix-hint=::/56 request=address,prefix # Only accept inbound router-advertisements on the WAN interface /ipv6 firewall filter add action=drop chain=input icmp-options=134:0-255 in-interface-list=!WAN protocol=icmpv6 # Allow prefix delegatation on WAN interface /ipv6 firewall filter add action=accept chain=input comment=\u0026#34;accept DHCPv6-Client prefix delegation.\u0026#34; dst-port=546 protocol=udp src-address=fe80::/10 ","date":"December 14 2024","externalUrl":null,"permalink":"/posts/mikrotik-ipv6/","section":"Posts","summary":"","title":"IPv6 prefix delegation on Mikrotik","type":"posts"},{"content":"","date":"December 14 2024","externalUrl":null,"permalink":"/tags/networking/","section":"Tags","summary":"","title":"Networking","type":"tags"},{"content":" Hello world # Welcome to my blog. My name is Kapil Agrawal (pronunciation: cup-ill) and I am a Security Engineer by profession. These days I mostly focus on things involving Kubernetes networking and security. I also have an extensive background in network operations and infrastructure automation. Generally speaking, I work at the intersection of networking, systems, software \u0026amp; security. During my downtime I enjoy being around nature by hiking/kayaking, traveling.\nMotivation # Since I rely heavily on Open source and the work that others put out online for free, I wanted to do my due diligence and share some of the cool stuff that I get to learn and work on which I usually end up documenting somewhere in my notes anyway. My hope is that someone on the internet could benefit from the information here and it also gives me a good reason to finally start using this domain that I have been squatting on for so long. I am super passionate about learning and sharing.\nThanks for stopping by. I hope you find the articles in this blog helpful.\nCiao! üëã\n","externalUrl":null,"permalink":"/about/","section":"Home","summary":"","title":"","type":"page"},{"content":"","externalUrl":null,"permalink":"/authors/","section":"Authors","summary":"","title":"Authors","type":"authors"},{"content":"","externalUrl":null,"permalink":"/categories/","section":"Categories","summary":"","title":"Categories","type":"categories"},{"content":"","externalUrl":null,"permalink":"/series/","section":"Series","summary":"","title":"Series","type":"series"}]